package GUI;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.Color;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.ArrayList;
import java.awt.event.ActionEvent;
import database.loginManagement;
import databaseModel.login;

public class assignAcount extends JFrame {

	private JPanel contentPane;
	private JTextField userNameInput;
	private JTextField accountNameInput;
	private JTextField passwordInput;
	private JTextField repasswordInput;
	menu menu = new menu();
	loginManagement loginManage = new loginManagement();

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					assignAcount frame = new assignAcount();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public assignAcount() {
		setTitle("Add account");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 551, 360);
		contentPane = new JPanel();
		contentPane.setBackground(Color.BLACK);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel lblNewLabel = new JLabel("User name");
		lblNewLabel.setFont(new Font("Times New Roman", Font.BOLD, 15));
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setBounds(36, 73, 112, 18);
		contentPane.add(lblNewLabel);
		
		JPanel panel = new JPanel();
		panel.setBackground(Color.CYAN);
		panel.setForeground(Color.CYAN);
		panel.setBounds(0, 0, 542, 51);
		contentPane.add(panel);
		panel.setLayout(null);
		
		JLabel lblNewLabel_2 = new JLabel("REGISTER");
		lblNewLabel_2.setBounds(10, 11, 101, 24);
		lblNewLabel_2.setFont(new Font("Times New Roman", Font.BOLD, 20));
		lblNewLabel_2.setForeground(Color.WHITE);
		panel.add(lblNewLabel_2);
		
		userNameInput = new JTextField();
		userNameInput.setBounds(36, 102, 183, 20);
		contentPane.add(userNameInput);
		userNameInput.setColumns(10);
		
		accountNameInput = new JTextField();
		accountNameInput.setColumns(10);
		accountNameInput.setBounds(36, 164, 183, 20);
		contentPane.add(accountNameInput);
		
		JLabel lblNewLabel_1 = new JLabel("Account name");
		lblNewLabel_1.setForeground(Color.WHITE);
		lblNewLabel_1.setFont(new Font("Times New Roman", Font.BOLD, 15));
		lblNewLabel_1.setBounds(36, 135, 112, 18);
		contentPane.add(lblNewLabel_1);
		
		passwordInput = new JTextField();
		passwordInput.setColumns(10);
		passwordInput.setBounds(36, 224, 183, 20);
		contentPane.add(passwordInput);
		
		JLabel lblPassword = new JLabel("Password");
		lblPassword.setForeground(Color.WHITE);
		lblPassword.setFont(new Font("Times New Roman", Font.BOLD, 15));
		lblPassword.setBounds(36, 195, 112, 18);
		contentPane.add(lblPassword);
		
		repasswordInput = new JTextField();
		repasswordInput.setColumns(10);
		repasswordInput.setBounds(36, 284, 183, 20);
		contentPane.add(repasswordInput);
		
		JLabel lblRepassword = new JLabel("Re-password");
		lblRepassword.setForeground(Color.WHITE);
		lblRepassword.setFont(new Font("Times New Roman", Font.BOLD, 15));
		lblRepassword.setBounds(36, 255, 112, 18);
		contentPane.add(lblRepassword);
		
		JButton clearButton = new JButton("Clear");
		clearButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				userNameInput.setText("");
				accountNameInput.setText("");
				passwordInput.setText("");
				repasswordInput.setText("");
			}
		});
		clearButton.setBounds(323, 101, 89, 23);
		contentPane.add(clearButton);
		
		JButton saveButton = new JButton("Save");
		saveButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String userName = userNameInput.getText();
				String accountName = accountNameInput.getText();
				String password = passwordInput.getText();
				String rePass = repasswordInput.getText();
				if(userName.isEmpty() || accountName.isEmpty() || password.isEmpty() || rePass.isEmpty() ){
					JOptionPane.showInternalMessageDialog(null, "You haven't enter user name or account name or password or re-password, please try again...");
				}
				else {
					if(passwordInput.equals(rePass)) {
						JOptionPane.showInternalMessageDialog(null,"Your password and re-password is not match, please check again...");
					}
					else {
						try {
							ArrayList<login> dataUser = loginManage.uploadOnline();
							int check3 = 0;
							for(login userElementLogin : dataUser) {
								if(userElementLogin.getUserName().equals(accountName)) {
									JOptionPane.showInternalMessageDialog(null, "Your new account is match with a account in the database, please try again...");
									check3 = 1;
									break;
								}
							}
							if(check3 != 1) {
								login login = new login(accountName,password,userName);
								dataUser.add(login);
								loginManage.pullFile(dataUser);
							}
							
						} catch (IOException e1) {
							// TODO Auto-generated catch block
							e1.printStackTrace();
						}
					}
				}
				
			}
		});
		saveButton.setBounds(323, 179, 89, 23);
		contentPane.add(saveButton);
		
		JButton backButton = new JButton("Back");
		backButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				menu.setVisible(true);
				dispose();
			}
		});
		backButton.setBounds(323, 250, 89, 23);
		contentPane.add(backButton);
	}
}
